{"version":3,"sources":["StateProvider.js","firebase.js","Header.js","Product.js","Home.js","CheckoutProduct.js","reducer.js","Subtotal.js","Checkout.js","Login.js","axios.js","Payment.js","Order.js","Orders.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","Header","basket","user","className","to","src","alt","type","onClick","signOut","email","length","Product","id","title","image","price","rating","dispatch","Array","fill","map","_","i","item","Home","CheckoutProduct","hideButton","getBasketTotal","reduce","amount","state","action","index","findIndex","basketItem","newBasket","splice","console","warn","Subtotal","history","useHistory","renderText","decimalScale","displayType","thousandSeparator","prefix","e","push","Checkout","Login","useState","setEmail","password","setPassword","onChange","target","preventDefault","signInWithEmailAndPassword","then","catch","error","alert","message","createUserWithEmailAndPassword","instance","axios","create","baseURL","Payment","stripe","useStripe","elements","useElements","processing","setProcessing","succeeded","setSucceeded","setError","disabled","setDisabled","clientSecret","setClientSecret","useEffect","a","method","url","response","data","getClientSecret","handleSubmit","event","confirmCardPayment","payment_method","card","getElement","CardElement","paymentIntent","collection","doc","uid","set","created","replace","cols","rows","placeholder","onSubmit","empty","Order","order","moment","unix","format","Orders","orders","setOrders","orderBy","onSnapshot","snapshot","docs","promise","loadStripe","App","onAuthStateChanged","authUser","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.20cc0907.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\n        {children}\n    </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);","import firebase from \"firebase\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCfXTWZXmnkTxHi27zPKLhz-QAFwU2E2bQ\",\n    authDomain: \"shop-mart-at-home.firebaseapp.com\",\n    databaseURL: \"https://shop-mart-at-home.firebaseio.com\",\n    projectId: \"shop-mart-at-home\",\n    storageBucket: \"shop-mart-at-home.appspot.com\",\n    messagingSenderId: \"680593903867\",\n    appId: \"1:680593903867:web:db9d60a84ca2141cbb205e\",\n    measurementId: \"G-FE6LZTHJ8Q\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst db = firebaseApp.firestore();\n\nconst auth = firebase.auth();\n\nexport { db, auth };\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport \"./Header.css\";\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Link } from \"react-router-dom\";\nimport { useStateValue } from './StateProvider';\nimport { auth } from './firebase';\n\nfunction Header() {\n\n    const [{ basket, user }, dispatch] = useStateValue();\n\n    const handleAuthentication = () => {\n        if (user) {\n            auth.signOut();\n        }\n    }\n\n    return (\n        <div className=\"header\">\n            <Link to=\"/\">\n                <img className=\"header__logo\" src=\"http://pngimg.com/uploads/amazon/amazon_PNG11.png\" alt=\"\" />\n            </Link>\n\n            <div className=\"header__search\">\n                <input className=\"header__searchInput\" type=\"text\" />\n                <SearchIcon className=\"header__searchIcon\" />\n            </div>\n\n            <div className=\"header__nav\">\n                <Link to={!user && \"/login\"}>\n                    <div onClick={handleAuthentication} className=\"header__option\">\n                        <span className=\"header__optionLineOne\">Hello {!user ? 'Guest' : user?.email}</span>\n                        <span className=\"header__optionLineTwo\">{user ? 'Sign Out' : 'Sign In'}</span>\n                    </div>\n                </Link>\n\n                <Link to=\"/orders\">\n                    <div className=\"header__option\">\n                        <span className=\"header__optionLineOne\">Returns</span>\n                        <span className=\"header__optionLineTwo\">& Orders</span>\n                    </div>\n                </Link>\n\n                <div className=\"header__option\">\n                    <span className=\"header__optionLineOne\">Your</span>\n                    <span className=\"header__optionLineTwo\">Prime</span>\n                </div>\n\n                <Link to=\"/checkout\">\n                    <div className=\"header__optionBasket\">\n                        <ShoppingBasketIcon />\n                        <span className=\"header__optionLineTwo header__basketCount\">\n                            {basket?.length}\n                        </span>\n                    </div>\n                </Link>\n\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","/* eslint-disable jsx-a11y/accessible-emoji */\n/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport \"./Product.css\";\nimport { useStateValue } from './StateProvider';\n\nfunction Product({ id, title, image, price, rating }) {\n    const [{ basket }, dispatch] = useStateValue();\n\n    const addToBasket = () => {\n        dispatch({\n            type: \"ADD_TO_BASKET\",\n            item: {\n                id: id,\n                title: title,\n                image: image,\n                price: price,\n                rating: rating,\n            },\n        });\n    };\n\n    return (\n        <div className=\"product\">\n            <div className=\"product__info\">\n                <p>{title}</p>\n                <p className=\"product__price\">\n                    <small>$</small>\n                    <strong>{price}</strong>\n                </p>\n                <div className=\"product__rating\">\n                    {Array(rating)\n                        .fill()\n                        .map((_, i) => (\n                            <p>🌟</p>\n                        ))\n                    }\n                </div>\n            </div>\n\n            <img src={image} alt=\"\" />\n\n            <button onClick={addToBasket}>Add to Basket</button>\n        </div>\n    )\n}\n\nexport default Product;\n","import React from 'react';\nimport Product from \"./Product\";\nimport \"./Home.css\";\n\nfunction Home() {\n    return (\n        <div className=\"home\">\n            <div className=\"home__container\">\n                <img className=\"home__image\" src=\"https://images-eu.ssl-images-amazon.com/images/G/02/digital/video/merch2016/Hero/Covid19/Generic/GWBleedingHero_ENG_COVIDUPDATE__XSite_1500x600_PV_en-GB._CB428684220_.jpg\" alt=\"\" />\n                <div className=\"home__row\">\n                    <Product\n                        id=\"123456789\"\n                        title=\"Apple iPhone 11 Pro Max (64GB) - Midnight Green\"\n                        price={1000}\n                        image=\"https://images-na.ssl-images-amazon.com/images/I/61ers6OzvUL._SL1024_.jpg\"\n                        rating={5}\n                    />\n                    <Product\n                        id=\"123056089\"\n                        title=\"Mathey-Tissot Analog Black Dial Men's Watch-H901AN\"\n                        price={200}\n                        image=\"https://images-na.ssl-images-amazon.com/images/I/61x1hbzwXrL._UL1440_.jpg\"\n                        rating={4}\n                    />\n                    <Product\n                        id=\"456789001\"\n                        title=\"\n                        Inalsa Power Blender MERAK-2000W with 100% Pure Copper Motor & Variable Speed| 8 Leaf High-Quality Stainless-Steel Blade| Includes BPA-Free Tritan Jar\"\n                        price={85}\n                        image=\"https://images-na.ssl-images-amazon.com/images/I/61Oos0SxjPL._SL1200_.jpg\"\n                        rating={3}\n                    />\n                </div>\n\n                <div className=\"home__row\">\n                    <Product\n                        id=\"234567891\"\n                        title=\"Lenovo Legion 5i 10th Gen Intel Core i7 15.6 inch Full HD Gaming Laptop (16GB/1TB HDD + 256GB SSD/Windows 10/120 Hz/NVIDIA GTX 1650Ti 4GB GDDR6 Graphics/Phantom Black)\"\n                        price={1200}\n                        image=\"https://images-na.ssl-images-amazon.com/images/I/61p3lA4N3uL._SL1000_.jpg\"\n                        rating={4}\n                    />\n                    <Product\n                        id=\"987654321\"\n                        title=\"Cracking the Coding Interview. The Data Structures & Algorithms Interview Questions You'll Be Asked Most Likely In Your Interviews\"\n                        price={10}\n                        image=\"https://images-na.ssl-images-amazon.com/images/I/41p1cRZGtaL._SX348_BO1,204,203,200_.jpg\"\n                        rating={5}\n                    />\n                </div>\n\n                <div className=\"home__row\">\n                    <Product\n                        id=\"985604221\"\n                        title=\"HONOR Band 5 (MidnightNavy)- Waterproof Full Color AMOLED Touchscreen, SpO2 (Blood Oxygen), Music Control, Watch Faces Store, up to 14 Day Battery Life\"\n                        price={30}\n                        image=\"https://images-na.ssl-images-amazon.com/images/I/810jwmTfQML._SL1500_.jpg\"\n                        rating={4}\n                    />\n                    <Product\n                        id=\"765432198\"\n                        title=\"Echo Dot (3rd Gen) – New and improved smart speaker with Alexa (Black)\"\n                        price={50}\n                        image=\"https://images-na.ssl-images-amazon.com/images/I/61EXU8BuGZL._SL1100_.jpg\"\n                        rating={3}\n                    />\n                    <Product\n                        id=\"654321002\"\n                        title=\"OnePlus Y Series 108 cm (43 inches) Full HD LED Smart Android TV 43Y1 (Black) (2020 Model)\"\n                        price={360}\n                        image=\"https://images-na.ssl-images-amazon.com/images/I/81kmtB1326L._SL1500_.jpg\"\n                        rating={5}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable jsx-a11y/accessible-emoji */\nimport React from 'react';\nimport \"./CheckoutProduct.css\";\nimport { useStateValue } from './StateProvider';\n\nfunction CheckoutProduct({ id, image, title, price, rating, hideButton }) {\n    const [{ basket }, dispatch] = useStateValue();\n\n    const removeFromBasket = () => {\n        dispatch({\n            type: 'REMOVE_FROM_BASKET',\n            id: id,\n        })\n    }\n\n    return (\n        <div className=\"checkoutProduct\">\n            <img className=\"checkoutProduct__image\" src={image} alt=\"\" />\n\n            <div className=\"checkoutProduct__info\">\n                <p className=\"checkoutProduct__title\">{title}</p>\n                <p className=\"checkoutProduct__price\">\n                    <strong>$</strong>\n                    <strong>{price}</strong>\n                </p>\n                <div className=\"checkoutProduct__rating\">\n                    {Array(rating)\n                        .fill()\n                        .map((_, i) => (\n                            <p>🌟</p>\n                        ))\n                    }\n                </div>\n                {!hideButton && (\n                    <button onClick={removeFromBasket}>Remove from basket</button>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default CheckoutProduct;\n","export const initialState = {\n    basket: [],\n    user: null\n};\n\nexport const getBasketTotal = (basket) =>\n    basket?.reduce((amount, item) => item.price + amount, 0);\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"ADD_TO_BASKET\":\n            return {\n                ...state,\n                basket: [...state.basket, action.item],\n            };\n\n        case \"EMPTY_BASKET\":\n            return {\n                ...state,\n                basket: []\n            };\n\n        case \"REMOVE_FROM_BASKET\":\n            const index = state.basket.findIndex(\n                (basketItem) => basketItem.id === action.id\n            );\n            let newBasket = [...state.basket];\n\n            if (index >= 0) {\n                newBasket.splice(index, 1);\n            } else {\n                console.warn(`Cant remove product (id: ${action}) as its not in the basket!`);\n            }\n\n            return {\n                ...state,\n                basket: newBasket\n            };\n\n        case \"SET_USER\":\n            return {\n                ...state,\n                user: action.user,\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport \"./Subtotal.css\";\nimport CurrencyFormat from \"react-currency-format\";\nimport { useStateValue } from \"./StateProvider\";\nimport { getBasketTotal } from './reducer';\nimport { useHistory } from 'react-router-dom';\n\nfunction Subtotal() {\n    const history = useHistory();\n    const [{ basket }, dispatch] = useStateValue();\n\n    return (\n        <div className=\"subtotal\">\n            <CurrencyFormat\n                renderText={(value) => (\n                    <>\n                        <p>\n                            Subtotal ({basket.length} items):\n                            <strong>{` ${value}`}</strong>\n                        </p>\n                        <small className=\"subtotal__gift\">\n                            <input type=\"checkbox\" />\n                            This Order Contains a gift\n                        </small>\n                    </>\n                )}\n                decimalScale={2}\n                value={getBasketTotal(basket)}\n                displayType={\"text\"}\n                thousandSeparator={true}\n                prefix={\"$\"}\n            />\n            <button onClick={e => history.push(\"/payment\")}>Proceed to Checkout</button>\n        </div>\n    );\n}\n\nexport default Subtotal;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport \"./Checkout.css\";\nimport CheckoutProduct from './CheckoutProduct';\nimport { useStateValue } from './StateProvider';\nimport Subtotal from \"./Subtotal\";\n\nfunction Checkout() {\n    const [{ basket, user }, dispatch] = useStateValue();\n\n    return (\n        <div className=\"checkout\">\n            <div className=\"checkout__left\">\n                <img className=\"checkout__ad\"\n                    src=\"https://images-na.ssl-images-amazon.com/images/G/02/UK_CCMP/TM/OCC_Amazon1._CB423492668_.jpg\" alt=\"\" />\n\n                <div>\n                    <h3>Hello {!user ? \"Guest\" : user?.email},</h3>\n                    <h2 className=\"checkout__title\">Your cart</h2>\n\n                    {basket.map(item => (\n                        <CheckoutProduct\n                            id={item.id}\n                            image={item.image}\n                            title={item.title}\n                            price={item.price}\n                            rating={item.rating}\n                        />\n                    ))}\n                </div>\n            </div>\n\n            <div className=\"checkout__right\">\n                <Subtotal />\n            </div>\n\n        </div>\n    );\n}\n\nexport default Checkout;\n","import { auth } from './firebase';\nimport React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport \"./Login.css\";\n\nfunction Login() {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const history = useHistory();\n\n    const signIn = (e) => {\n        e.preventDefault();\n        auth.signInWithEmailAndPassword(email, password)\n            .then(auth => {\n                history.push(\"/\")\n            })\n            .catch(error => alert(error.message))\n    }\n\n    const register = (e) => {\n        e.preventDefault();\n        auth.createUserWithEmailAndPassword(email, password)\n            .then((auth) => {\n                if (auth) {\n                    history.push(\"/\")\n                }\n            })\n            .catch(error => alert(error.message))\n    }\n\n    return (\n        <div className=\"login\">\n            <Link to=\"/\">\n                <img className=\"login__logo\" src=\"https://1000logos.net/wp-content/uploads/2019/07/Amazon-logo-2000%E2%80%93present.jpg\" alt=\"\" />\n            </Link>\n\n            <div className=\"login__container\">\n                <h1>Sign-in</h1>\n\n                <form>\n                    <h5>E-mail</h5>\n                    <input type=\"text\" value={email}\n                        onChange={e => setEmail(e.target.value)} />\n\n                    <h5>Password</h5>\n                    <input type=\"password\" value={password}\n                        onChange={e => setPassword(e.target.value)} />\n\n                    <button type=\"submit\" onClick={signIn} className=\"login__signInButton\">Sign In</button>\n                </form>\n\n                <p>\n                    By signing-in, you agree to Shop From Home's\n                    Conditions of Use and Privacy Notice.\n                </p>\n\n                <button onClick={register} type=\"submit\" className=\"login__registerButton\">Create Your Account</button>\n            </div>\n        </div>\n    );\n}\n\nexport default Login;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"http://localhost:5001/shop-mart-at-home/us-central1/api\",\n});\n\nexport default instance;","/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from 'react';\nimport \"./Payment.css\";\nimport { useStateValue } from \"./StateProvider\";\nimport CheckoutProduct from \"./CheckoutProduct\";\nimport { Link, useHistory } from 'react-router-dom';\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport CurrencyFormat from 'react-currency-format';\nimport { getBasketTotal } from './reducer';\nimport axios from \"./axios\";\nimport { db } from './firebase';\n\nfunction Payment() {\n    const [{ basket, user }, dispatch] = useStateValue();\n    const history = useHistory();\n\n    const stripe = useStripe();\n    const elements = useElements();\n\n    const [processing, setProcessing] = useState(\"\");\n    const [succeeded, setSucceeded] = useState(false);\n    const [error, setError] = useState(null);\n    const [disabled, setDisabled] = useState(true);\n    const [clientSecret, setClientSecret] = useState(true);\n\n    useEffect(() => {\n        const getClientSecret = async () => {\n            const response = await axios({\n                method: 'post',\n                url: `/payments/create?total=${getBasketTotal(basket) * 100}`\n            });\n            setClientSecret(response.data.clientSecret)\n        }\n        getClientSecret();\n    }, [basket])\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setProcessing(true);\n\n        const payload = await stripe.confirmCardPayment(clientSecret, {\n            payment_method: {\n                card: elements.getElement(CardElement)\n            }\n        }).then(({ paymentIntent }) => {\n            db\n                .collection('users')\n                .doc(user?.uid)\n                .collection('orders')\n                .doc(paymentIntent.id)\n                .set({\n                    basket: basket,\n                    amount: paymentIntent.amount,\n                    created: paymentIntent.created\n                });\n\n            setSucceeded(true);\n            setError(null);\n            setProcessing(false);\n\n            dispatch({\n                type: \"EMPTY_BASKET\"\n            });\n\n            history.replace(\"/orders\");\n        })\n    }\n\n    const handleChange = event => {\n        setDisabled(event.empty);\n        setError(event.error ? event.error.message : \"\");\n    }\n\n    return (\n        <div className=\"payment\">\n            <div className=\"payment__container\">\n                <h1>\n                    Checkout (<Link to=\"/checkout\">\n                        {basket?.length} items\n                    </Link>)\n                </h1>\n\n                <div className=\"payment__section\">\n                    <div className=\"payment__title\">\n                        <h3>Delivery Address</h3>\n                    </div>\n                    <div className=\"payment__address\">\n                        <p>{!user ? \"Guest\" : user?.email}</p>\n                        <textarea cols=\"30\" rows=\"5\" placeholder=\"Enter address\"></textarea>\n                    </div>\n                </div>\n\n                <div className=\"payment__section\">\n                    <div className=\"payment__title\">\n                        <h3>Review items and delivery</h3>\n                    </div>\n                    <div className=\"payment__items\">\n                        {basket.map(item => (\n                            <CheckoutProduct\n                                id={item.id}\n                                image={item.image}\n                                title={item.title}\n                                price={item.price}\n                                rating={item.rating}\n                            />\n                        ))}\n                    </div>\n                </div>\n\n                <div className=\"payment__section\">\n                    <div className=\"payment__title\">\n                        <h3>Payment Method</h3>\n                    </div>\n                    <div className=\"payment__details\">\n                        <form onSubmit={handleSubmit}>\n                            <CardElement onChange={handleChange} />\n                            <div className=\"payment__priceContainer\">\n                                <CurrencyFormat\n                                    renderText={(value) => (\n                                        <h3>Order Total: {value}</h3>\n                                    )}\n                                    decimalScale={2}\n                                    value={getBasketTotal(basket)}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    prefix={\"$\"}\n                                />\n                                <button disabled={processing || disabled || succeeded}>\n                                    <span>{processing ? <p>Processing</p> : \"Buy now\"}</span>\n                                </button>\n                            </div>\n                            {error && <div>{error}</div>}\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Payment;\n","import React from 'react';\nimport \"./Order.css\";\nimport moment from \"moment\";\nimport CheckoutProduct from './CheckoutProduct';\nimport CurrencyFormat from 'react-currency-format';\n\nfunction Order({ order }) {\n    return (\n        <div className=\"order\">\n            <h2>Order</h2>\n\n            <p>{moment.unix(order.data.created).format(\"MMMM Do YYYY, h:mma\")}</p>\n\n            <p className=\"order__id\">\n                <small>{order.id}</small>\n            </p>\n\n            {order.data.basket?.map(item => (\n                <CheckoutProduct\n                    id={item.id}\n                    image={item.image}\n                    title={item.title}\n                    price={item.price}\n                    rating={item.rating}\n                    hideButton\n                />\n            ))}\n            <CurrencyFormat\n                renderText={(value) => (\n                    <h3 className=\"order__total\">Order Total: {value}</h3>\n                )}\n                decimalScale={2}\n                value={order.data.amount / 100}\n                displayType={\"text\"}\n                thousandSeparator={true}\n                prefix={\"$\"}\n            />\n        </div>\n    );\n}\n\nexport default Order;\n","import React, { useState, useEffect } from 'react';\nimport \"./Orders.css\";\nimport { useStateValue } from './StateProvider';\nimport { db } from \"./firebase\";\nimport Order from './Order';\n\nfunction Orders() {\n    const [{ basket, user }, dispatch] = useStateValue();\n    const [orders, setOrders] = useState([]);\n\n    useEffect(() => {\n        if (user) {\n            db\n                .collection('users')\n                .doc(user?.uid)\n                .collection('orders')\n                .orderBy('created', 'desc')\n                .onSnapshot(snapshot => (\n                    setOrders(snapshot.docs.map(doc => ({\n                        id: doc.id,\n                        data: doc.data()\n                    })))\n                ))\n        } else {\n            setOrders([]);\n        }\n    }, [user]);\n\n    return (\n        <div className=\"orders\">\n            <h1>Your Orders</h1>\n\n            <div className=\"orders__order\">\n                {orders?.map(order => (\n                    <Order order={order} />\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default Orders;\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-empty-pattern */\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport Header from \"./Header\";\nimport Home from \"./Home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Checkout from \"./Checkout\";\nimport Login from './Login';\nimport { auth } from './firebase';\nimport { useStateValue } from './StateProvider';\nimport Payment from './Payment';\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport Orders from \"./Orders\";\n\nconst promise = loadStripe(\"pk_test_51HTQJjCwCvokgQhPy6dKKX8sVjO6z1KTLTjKdiHLq8JH5lfvpaqxDH28DLFFVNk3H55U1NlXoL4JXA7gwJiXngxQ00Gf2mxEFx\");\n\nfunction App() {\n  const [{ }, dispatch] = useStateValue();\n\n  useEffect(() => {\n    auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        dispatch({\n          type: 'SET_USER',\n          user: authUser,\n        })\n      } else {\n        dispatch({\n          type: 'SET_USER',\n          user: null,\n        })\n      }\n    })\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"app\">\n        <Switch>\n          <Route path=\"/orders\">\n            <Header />\n            <Orders />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/checkout\">\n            <Header />\n            <Checkout />\n          </Route>\n          <Route path=\"/payment\">\n            <Header />\n            <Elements stripe={promise}>\n              <Payment />\n            </Elements>\n          </Route>\n          <Route path=\"/\">\n            <Header />\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './StateProvider';\nimport reducer, { initialState } from \"./reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}